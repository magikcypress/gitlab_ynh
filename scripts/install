#!/bin/bash

app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE

ynh_app_setting_set "$app" admin "$admin"
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" language "$language"

# Check domain/path availability
sudo yunohost app checkurl "${domain}${path}" -a "$app" \
|| ynh_die "Path not available: ${domain}${path}"

findPort () {
    port=$1

    sudo yunohost app checkport $port
    while [[ ! $? -eq 0 ]]
        do
            port=$(($port + 1))
            sudo yunohost app checkport $port
        done

   return $port
}

# Install dependencies
sudo apt-get install -y curl openssh-server

# Add gitlab package and install it
curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash
sudo apt-get install -y gitlab-ce

# Find available port
findPort 8001

# Configure gitlab
sed -i "s@GENERATED_EXTERNAL_URL@https://$domain@g" ../conf/gitlab.rb
sed -i "s@PORT@$port@g" ../conf/gitlab.rb
sudo cp -f ../conf/gitlab.rb /etc/gitlab/gitlab.rb
sudo gitlab-ctl reconfigure

# Configure nginx
sed -i "s@PORT@$port@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/gitlab.conf

# Set public
if [ "$is_public" = "Yes" ];
then
	sudo yunohost app setting gitlab skipped_uris -v "/"
  sudo yunohost app setting gitlab protected_uris -v "/ynhpanel.js,/ynhpanel.json,/ynhpanel.css,/yunohost/sso"
fi

# Reload Nginx, restart seafile and regenerate SSOwat conf
sudo yunohost app ssowatconf
sudo service nginx reload
sudo gitlab-ctl restart

